{
  "contractName": "WhiteElephant",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "currNftToUnwrap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "currentUnwrapper",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nfts",
      "outputs": [
        {
          "internalType": "contract ERC721",
          "name": "nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "orderNum",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "playas",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyTicket",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_nft",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "depositNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stealFrom",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_theirAddress",
          "type": "address"
        }
      ],
      "name": "stealNft",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unwrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unwrapAfterStolen",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currNftToUnwrap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentUnwrapper\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"depositNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nfts\",\"outputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"orderNum\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playas\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stealFrom\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_theirAddress\",\"type\":\"address\"}],\"name\":\"stealNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unwrapAfterStolen\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/shredder/git/renft/white-elephant/contracts/WhiteElephant.sol\":\"WhiteElephant\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/shredder/git/renft/white-elephant/contracts/WhiteElephant.sol\":{\"keccak256\":\"0x4c90a8cc9479f1518920bebaacdefef032772f1869e1a5fffb0c650f4c71467e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://731c2cb326a9fbc995d91f50a30e8ec6c89a1a15bcd91340e298088fce062242\",\"dweb:/ipfs/Qmd6GpQyaZ3bHVQ6pkyreyqbVm3AqTYksoWg4wsYntMUn4\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xf7c39c7e6d06ed3bda90cfefbcbf2ddc32c599c3d6721746546ad64946efccaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb57a28e189cd8b05748db44bdd51d608e6f1364dd1b35ad921e1bc82c10631e\",\"dweb:/ipfs/QmaWWTBbVu2pRR9XUbE4iC159NoP59cRF9ZJwhf4ghFN9i\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100216100c460201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506100cc565b600033905090565b6119fe806100db6000396000f3fe6080604052600436106100dd5760003560e01c80639d78c8341161007f578063ef2a209a11610059578063ef2a209a1461033e578063f0178c8314610355578063f2fde38b14610380578063fd02ffb7146103d1576100dd565b80639d78c834146102ab578063a72e2cd6146102d9578063edca914c14610334576100dd565b8063600d003b116100bb578063600d003b146101d7578063715018a61461023c57806386ec6177146102535780638da5cb5b1461026a576100dd565b8063265aa621146100e257806328ad0ccb1461014e5780634255f4ea1461017c575b600080fd5b3480156100ee57600080fd5b5061011b6004803603602081101561010557600080fd5b81019080803590602001909291905050506103e8565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561015a57600080fd5b5061016361043c565b604051808260ff16815260200191505060405180910390f35b34801561018857600080fd5b506101d56004803603604081101561019f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061044f565b005b3480156101e357600080fd5b50610210600480360360208110156101fa57600080fd5b81019080803590602001909291905050506108d8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024857600080fd5b50610251610917565b005b34801561025f57600080fd5b50610268610a9d565b005b34801561027657600080fd5b5061027f610d06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b757600080fd5b506102c0610d2f565b604051808260ff16815260200191505060405180910390f35b3480156102e557600080fd5b50610332600480360360408110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d42565b005b61033c610e96565b005b34801561034a57600080fd5b50610353611191565b005b34801561036157600080fd5b5061036a611552565b6040518082815260200191505060405180910390f35b34801561038c57600080fd5b506103cf600480360360208110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611558565b005b3480156103dd57600080fd5b506103e6611763565b005b600581815481106103f857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600460009054906101000a900460ff1681565b33600460009054906101000a900460ff1660ff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660ff1614610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420796f7572206f7264657200000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050838160020160009054906101000a900460ff1660ff16116105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f63616e7420737465616c2066726f6d207468656d00000000000000000000000081525060200191505060405180910390fd5b60001515600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff161515146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f63616e7420737465616c2066726f6d207468656d20616761696e00000000000081525060200191505060405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816001018190555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050505050565b600381815481106108e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61091f611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610aa5611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b600380549050811015610d035760006001600060038481548110610b8857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060038581548110610c3d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610cdd57600080fd5b505af1158015610cf1573d6000803e3d6000fd5b50505050508080600101915050610b68565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900460ff1681565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610dd157600080fd5b505af1158015610de5573d6000803e3d6000fd5b50505050600560405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b66038d7ea4c68000341015610f13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f7469636b657420707269636520697320302e303100000000000000000000000081525060200191505060405180910390fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160039054906101000a900460ff16151514610fdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6f6e6c79206f6e65207469636b6574207065722061646472657373000000000081525060200191505060405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160036101000a81548160ff021916908315150217905550600260009054906101000a900460ff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908360ff1602179055506002600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160039054906101000a900460ff16611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f796f752063616e7420706c61790000000000000000000000000000000000000081525060200191505060405180910390fd5b600115158160020160019054906101000a900460ff161515146112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f796f75206d75737420686176652061207469636b65740000000000000000000081525060200191505060405180910390fd5b600115158160020160029054906101000a900460ff1615151461136e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f796f75206d7573742068617665206265656e2073746f6c656e2066726f6d000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611417576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119a36026913960400191505060405180910390fd5b6000816001015414611491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7765697264206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6005600754815481106114a057fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056007548154811061152357fe5b906000526020600020906002020160010154816001018190555060076000815480929190600101919050555050565b60075481565b611560611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061197d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b33600460009054906101000a900460ff1660ff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660ff161461183d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420796f7572206f7264657200000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060056007548154811061188f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056007548154811061191257fe5b90600052602060002090600202016001015481600101819055506007600081548092919060010191905055506004600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373796f75206861766520616c726561647920756e7772617070656420616674657220737465616ca26469706673582212206fb5b78eaf468129de1bea8f88005d93c51eb0b548c774a0ad8f557851c6575564736f6c63430007050033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80639d78c8341161007f578063ef2a209a11610059578063ef2a209a1461033e578063f0178c8314610355578063f2fde38b14610380578063fd02ffb7146103d1576100dd565b80639d78c834146102ab578063a72e2cd6146102d9578063edca914c14610334576100dd565b8063600d003b116100bb578063600d003b146101d7578063715018a61461023c57806386ec6177146102535780638da5cb5b1461026a576100dd565b8063265aa621146100e257806328ad0ccb1461014e5780634255f4ea1461017c575b600080fd5b3480156100ee57600080fd5b5061011b6004803603602081101561010557600080fd5b81019080803590602001909291905050506103e8565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b34801561015a57600080fd5b5061016361043c565b604051808260ff16815260200191505060405180910390f35b34801561018857600080fd5b506101d56004803603604081101561019f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061044f565b005b3480156101e357600080fd5b50610210600480360360208110156101fa57600080fd5b81019080803590602001909291905050506108d8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024857600080fd5b50610251610917565b005b34801561025f57600080fd5b50610268610a9d565b005b34801561027657600080fd5b5061027f610d06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102b757600080fd5b506102c0610d2f565b604051808260ff16815260200191505060405180910390f35b3480156102e557600080fd5b50610332600480360360408110156102fc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d42565b005b61033c610e96565b005b34801561034a57600080fd5b50610353611191565b005b34801561036157600080fd5b5061036a611552565b6040518082815260200191505060405180910390f35b34801561038c57600080fd5b506103cf600480360360208110156103a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611558565b005b3480156103dd57600080fd5b506103e6611763565b005b600581815481106103f857600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600460009054906101000a900460ff1681565b33600460009054906101000a900460ff1660ff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660ff1614610529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420796f7572206f7264657200000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050838160020160009054906101000a900460ff1660ff16116105f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f63616e7420737465616c2066726f6d207468656d00000000000000000000000081525060200191505060405180910390fd5b60001515600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160029054906101000a900460ff161515146106be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f63616e7420737465616c2066726f6d207468656d20616761696e00000000000081525060200191505060405180910390fd5b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154816001018190555060018060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160026101000a81548160ff0219169083151502179055506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050505050565b600381815481106108e857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61091f611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610aa5611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60005b600380549050811015610d035760006001600060038481548110610b8857fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3060038581548110610c3d57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684600101546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610cdd57600080fd5b505af1158015610cf1573d6000803e3d6000fd5b50505050508080600101915050610b68565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900460ff1681565b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050600060405180830381600087803b158015610dd157600080fd5b505af1158015610de5573d6000803e3d6000fd5b50505050600560405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015550505050565b66038d7ea4c68000341015610f13576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f7469636b657420707269636520697320302e303100000000000000000000000081525060200191505060405180910390fd5b60001515600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160039054906101000a900460ff16151514610fdc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6f6e6c79206f6e65207469636b6574207065722061646472657373000000000081525060200191505060405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff02191690831515021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160036101000a81548160ff021916908315150217905550600260009054906101000a900460ff16600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff021916908360ff1602179055506002600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060020160039054906101000a900460ff16611258576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600d8152602001807f796f752063616e7420706c61790000000000000000000000000000000000000081525060200191505060405180910390fd5b600115158160020160019054906101000a900460ff161515146112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f796f75206d75737420686176652061207469636b65740000000000000000000081525060200191505060405180910390fd5b600115158160020160029054906101000a900460ff1615151461136e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f796f75206d7573742068617665206265656e2073746f6c656e2066726f6d000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611417576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806119a36026913960400191505060405180910390fd5b6000816001015414611491576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7765697264206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6005600754815481106114a057fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056007548154811061152357fe5b906000526020600020906002020160010154816001018190555060076000815480929190600101919050555050565b60075481565b611560611974565b73ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156116a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061197d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b33600460009054906101000a900460ff1660ff16600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660ff161461183d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f6e6f7420796f7572206f7264657200000000000000000000000000000000000081525060200191505060405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060056007548154811061188f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056007548154811061191257fe5b90600052602060002090600202016001015481600101819055506007600081548092919060010191905055506004600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373796f75206861766520616c726561647920756e7772617070656420616674657220737465616ca26469706673582212206fb5b78eaf468129de1bea8f88005d93c51eb0b548c774a0ad8f557851c6575564736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "201:4337:1:-:0;;;;;;;;;;;;;882:17:4;902:12;:10;;;:12;;:::i;:::-;882:32;;933:9;924:6;;:18;;;;;;;;;;;;;;;;;;990:9;957:43;;986:1;957:43;;;;;;;;;;;;848:159;201:4337:1;;598:104:3;651:15;685:10;678:17;;598:104;:::o;201:4337:1:-;;;;;;;",
  "deployedSourceMap": "201:4337:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;707:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;671:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1930:758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;641:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1706:145:4;;;;;;;;;;;;;:::i;:::-;;4181:355:1;;;;;;;;;;;;;:::i;:::-;;1083:77:4;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;558:21:1;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1661:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1126:529;;;:::i;:::-;;3425:750;;;;;;;;;;;;;:::i;:::-;;806:30;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2000:240:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2738:477:1;;;;;;;;;;;;;:::i;:::-;;707:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;671:29::-;;;;;;;;;;;;;:::o;1930:758::-;2024:10;923:16;;;;;;;;;;;897:42;;:4;:13;902:7;897:13;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;889:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:19:::2;2229:4;:16;2234:10;2229:16;;;;;;;;;;;;;;;2207:38;;2282:10;2264:6;:15;;;;;;;;;;;;:28;;;2256:61;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;2385:5;2348:42;;:4;:19;2353:13;2348:19;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:42;;;2327:115;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;2466:4;:19;2471:13;2466:19;;;;;;;;;;;;;;;:23;;;;;;;;;;;;2453:6;:10;;;:36;;;;;;;;;;;;;;;;;;2516:4;:19;2521:13;2516:19;;;;;;;;;;;;;;;:27;;;2499:6;:14;;:44;;;;2590:4;2554::::0;:19:::2;2559:13;2554:19;;;;;;;;;;;;;;;:33;;;:40;;;;;;;;;;;;;;;;;;2638:1;2604:4;:19;2609:13;2604:19;;;;;;;;;;;;;;;:23;;;:36;;;;;;;;;;;;;;;;;;2680:1;2650:4;:19;2655:13;2650:19;;;;;;;;;;;;;;;:27;;:31;;;;1112:1;1930:758:::0;;;:::o;641:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1706:145:4:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1812:1:::1;1775:40;;1796:6;::::0;::::1;;;;;;;;1775:40;;;;;;;;;;;;1842:1;1825:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1706:145::o:0;4181:355:1:-;1297:12:4;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4280:9:1::2;4275:255;4299:6;:13;;;;4295:1;:17;4275:255;;;4333:19;4355:4;:15;4360:6;4367:1;4360:9;;;;;;;;;;;;;;;;;;;;;;;;;4355:15;;;;;;;;;;;;;;;4333:37;;4391:6;:10;;;;;;;;;;;;4384:31;;;4441:4;4464:6;4471:1;4464:9;;;;;;;;;;;;;;;;;;;;;;;;;4491:6;:14;;;4384:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;4275:255;4314:3;;;;;;;4275:255;;;;4181:355::o:0;1083:77:4:-;1121:7;1147:6;;;;;;;;;;;1140:13;;1083:77;:::o;558:21:1:-;;;;;;;;;;;;;:::o;1661:263::-;1766:4;:17;;;1784:10;1804:4;1811:8;1766:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1887:4;1897:19;;;;;;;;1901:4;1897:19;;;;;;1907:8;1897:19;;;1887:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1661:263;;:::o;1126:529::-;1193:11;1180:9;:24;;1172:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1287:5;1260:32;;:4;:16;1265:10;1260:16;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;1239:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:4;1356;:16;1361:10;1356:16;;;;;;;;;;;;;;;:26;;;:33;;;;;;;;;;;;;;;;;;1425:4;1399;:16;1404:10;1399:16;;;;;;;;;;;;;;;:23;;;:30;;;;;;;;;;;;;;;;;;1586:8;;;;;;;;;;;1558:4;:16;1563:10;1558:16;;;;;;;;;;;;;;;:25;;;:36;;;;;;;;;;;;;;;;;;1604:8;;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:6;1637:10;1625:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1126:529::o;3425:750::-;3483:19:::1;3505:4;:16;3510:10;3505:16;;;;;;;;;;;;;;;3483:38;;3539:6;:13;;;;;;;;;;;;3531:39;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3657:4;3637:24;;:6;:16;;;;;;;;;;;;:24;;;3629:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3730:4;3706:28;;:6;:20;;;;;;;;;;;;:28;;;3698:71;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3831:1;3800:33;;3808:6;:10;;;;;;;;;;;;3800:33;;;3779:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3933:1;3915:6;:14;;;:19;3907:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4041:4;4046:15;;4041:21;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;4020:6;:10;;;:47;;;;;;;;;;;;;;;;;;4094:4;4099:15;;4094:21;;;;;;;;;;;;;;;;;;:29;;;4077:6;:14;;:46;;;;4133:15;;:17;;;;;;;;;;;;;1112:1;3425:750::o:0;806:30::-;;;;:::o;2000:240:4:-;1297:12;:10;:12::i;:::-;1287:22;;:6;;;;;;;;;;:22;;;1279:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:1:::1;2088:22;;:8;:22;;;;2080:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2197:8;2168:38;;2189:6;::::0;::::1;;;;;;;;2168:38;;;;;;;;;;;;2225:8;2216:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2000:240:::0;:::o;2738:477:1:-;2773:10;923:16;;;;;;;;;;;897:42;;:4;:13;902:7;897:13;;;;;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;889:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:19:::2;2829:4;:16;2834:10;2829:16;;;;;;;;;;;;;;;2807:38;;3019:4;3024:15;;3019:21;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2998:6;:10;;;:47;;;;;;;;;;;;;;;;;;3072:4;3077:15;;3072:21;;;;;;;;;;;;;;;;;;:29;;;3055:6;:14;;:46;;;;3111:15;;:17;;;;;;;;;;;;;3190:16;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:1;2738:477:::0;:::o;598:104:3:-;651:15;685:10;678:17;;598:104;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.5;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract WhiteElephant is Ownable {\n    struct Info {\n        address nft;\n        uint256 tokenId;\n        uint8 orderNum;\n        bool hasTicket;\n        bool wasStolenFrom;\n        bool exists;\n    }\n\n    struct Nft {\n        ERC721 nft;\n        uint256 tokenId;\n    }\n\n    mapping(address => Info) private info;\n\n    // todo: this will be chainlink\n    uint8 public orderNum;\n\n    // todo: decide on the max total number of players\n    address[] public playas;\n\n    uint8 public currentUnwrapper;\n\n    Nft[] public nfts;\n\n    // * for chainlink integration\n    uint256[] private unavailableNfts;\n\n    uint256 public currNftToUnwrap;\n\n    modifier yourOrder(address _sender) {\n        require(info[_sender].orderNum == currentUnwrapper, \"not your order\");\n        _;\n    }\n\n    modifier onChristmas() {\n        // todo: uncomment\n        // require(block.timestamp >= 1232321, \"wait for Christmas\");\n        _;\n    }\n\n    function buyTicket() public payable {\n        require(msg.value >= 0.001 ether, \"ticket price is 0.01\");\n        require(\n            info[msg.sender].exists == false,\n            \"only one ticket per address\"\n        );\n\n        info[msg.sender].hasTicket = true;\n        info[msg.sender].exists = true;\n        // give them a chainlink VRF here for the order in which they will go\n\n        // todo: refactor for chainlink\n        info[msg.sender].orderNum = orderNum;\n        orderNum++;\n\n        playas.push(msg.sender);\n    }\n\n    function depositNft(ERC721 _nft, uint256 _tokenId) public {\n        // will fail if not approved\n        _nft.transferFrom(msg.sender, address(this), _tokenId);\n        // todo: idea about deposits in the future. fees\n        nfts.push(Nft(_nft, _tokenId));\n    }\n\n    function stealNft(uint256 _stealFrom, address _theirAddress)\n        public\n        yourOrder(msg.sender)\n        onChristmas\n    {\n        // 1. user must not have the nft\n        // 2. can only steal from the people before them\n        // 3. ensure it is their order\n        Info storage player = info[msg.sender];\n\n        require(player.orderNum > _stealFrom, \"cant steal from them\");\n        require(\n            info[_theirAddress].wasStolenFrom == false,\n            \"cant steal from them again\"\n        );\n\n        player.nft = info[_theirAddress].nft;\n        player.tokenId = info[_theirAddress].tokenId;\n\n        info[_theirAddress].wasStolenFrom = true;\n        info[_theirAddress].nft = address(0);\n        info[_theirAddress].tokenId = 0;\n    }\n\n    // on Christmas Eve, this gets unlocked\n    function unwrap() public yourOrder(msg.sender) onChristmas {\n        Info storage player = info[msg.sender];\n        // todo: require christmas\n        // ensure the order is respected\n\n        // todo: integrate chainlink. right now linear unwrapping\n        player.nft = address(nfts[currNftToUnwrap].nft);\n        player.tokenId = nfts[currNftToUnwrap].tokenId;\n        currNftToUnwrap++;\n        // ----\n\n        // increment the unwrapper\n        currentUnwrapper++;\n    }\n\n    // * potential issue if this is called at the same time as unwrap by someone else\n    // and both get the same NFT... For cases like that, ensure we have the ability\n    // to send NFTs ourselves too\n    function unwrapAfterStolen() public onChristmas {\n        Info storage player = info[msg.sender];\n        require(player.exists, \"you cant play\");\n\n        // ensure that the user was stolen from\n        require(player.hasTicket == true, \"you must have a ticket\");\n        require(player.wasStolenFrom == true, \"you must have been stolen from\");\n        require(\n            address(player.nft) == address(0),\n            \"you have already unwrapped after steal\"\n        );\n        require(player.tokenId == 0, \"weird error\");\n\n        // todo: integrate chainlink for random unwrapping\n        player.nft = address(nfts[currNftToUnwrap].nft);\n        player.tokenId = nfts[currNftToUnwrap].tokenId;\n        currNftToUnwrap++;\n        // ------\n    }\n\n    function endEvent() public onlyOwner onChristmas {\n        // todo: require christmas\n        for (uint256 i = 0; i < playas.length; i++) {\n            Info storage player = info[playas[i]];\n            ERC721(player.nft).transferFrom(\n                address(this),\n                playas[i],\n                player.tokenId\n            );\n        }\n    }\n}\n",
  "sourcePath": "/home/shredder/git/renft/white-elephant/contracts/WhiteElephant.sol",
  "ast": {
    "absolutePath": "/home/shredder/git/renft/white-elephant/contracts/WhiteElephant.sol",
    "exportedSymbols": {
      "Address": [
        2259
      ],
      "Context": [
        518
      ],
      "ERC165": [
        684
      ],
      "ERC721": [
        1823
      ],
      "EnumerableMap": [
        2714
      ],
      "EnumerableSet": [
        3194
      ],
      "IERC165": [
        696
      ],
      "IERC721": [
        1939
      ],
      "IERC721Enumerable": [
        1970
      ],
      "IERC721Metadata": [
        1997
      ],
      "IERC721Receiver": [
        2015
      ],
      "Ownable": [
        627
      ],
      "SafeMath": [
        892
      ],
      "Strings": [
        3281
      ],
      "WhiteElephant": [
        433
      ]
    },
    "id": 434,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 1824,
        "src": "57:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 628,
        "src": "131:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 627,
              "src": "227:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$627",
                "typeString": "contract Ownable"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "227:7:1"
          }
        ],
        "contractDependencies": [
          518,
          627
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 433,
        "linearizedBaseContracts": [
          433,
          627,
          518
        ],
        "name": "WhiteElephant",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WhiteElephant.Info",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "nft",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "263:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "263:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "284:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "284:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "orderNum",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "309:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "hasTicket",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "333:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 45,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "wasStolenFrom",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "357:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 47,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "385:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nodeType": "StructDefinition",
            "scope": 433,
            "src": "241:162:1",
            "visibility": "public"
          },
          {
            "canonicalName": "WhiteElephant.Nft",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "nft",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "430:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1823",
                  "typeString": "contract ERC721"
                },
                "typeName": {
                  "id": 52,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1823,
                  "src": "430:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1823",
                    "typeString": "contract ERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "450:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Nft",
            "nodeType": "StructDefinition",
            "scope": 433,
            "src": "409:63:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "info",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "478:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
              "typeString": "mapping(address => struct WhiteElephant.Info)"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 57,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "478:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                "typeString": "mapping(address => struct WhiteElephant.Info)"
              },
              "valueType": {
                "id": 58,
                "name": "Info",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 51,
                "src": "497:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                  "typeString": "struct WhiteElephant.Info"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9d78c834",
            "id": 62,
            "mutability": "mutable",
            "name": "orderNum",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "558:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 61,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "558:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "600d003b",
            "id": 65,
            "mutability": "mutable",
            "name": "playas",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "641:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "641:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 64,
              "nodeType": "ArrayTypeName",
              "src": "641:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28ad0ccb",
            "id": 67,
            "mutability": "mutable",
            "name": "currentUnwrapper",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "671:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 66,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "671:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 70,
            "mutability": "mutable",
            "name": "nfts",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "707:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
              "typeString": "struct WhiteElephant.Nft[]"
            },
            "typeName": {
              "baseType": {
                "id": 68,
                "name": "Nft",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 56,
                "src": "707:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Nft_$56_storage_ptr",
                  "typeString": "struct WhiteElephant.Nft"
                }
              },
              "id": 69,
              "nodeType": "ArrayTypeName",
              "src": "707:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage_ptr",
                "typeString": "struct WhiteElephant.Nft[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "unavailableNfts",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "766:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "766:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 72,
              "nodeType": "ArrayTypeName",
              "src": "766:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f0178c83",
            "id": 75,
            "mutability": "mutable",
            "name": "currNftToUnwrap",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "806:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "879:97:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 80,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "897:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 82,
                            "indexExpression": {
                              "id": 81,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "902:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "897:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderNum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "897:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 84,
                          "name": "currentUnwrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "923:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "897:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420796f7572206f72646572",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8452e0e0abbb62beb69d724a519fd9465797ff825106b0f43c9b945197961412",
                          "typeString": "literal_string \"not your order\""
                        },
                        "value": "not your order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8452e0e0abbb62beb69d724a519fd9465797ff825106b0f43c9b945197961412",
                          "typeString": "literal_string \"not your order\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "889:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "889:69:1"
                },
                {
                  "id": 89,
                  "nodeType": "PlaceholderStatement",
                  "src": "968:1:1"
                }
              ]
            },
            "id": 91,
            "name": "yourOrder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "862:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:17:1"
            },
            "src": "843:133:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1005:115:1",
              "statements": [
                {
                  "id": 93,
                  "nodeType": "PlaceholderStatement",
                  "src": "1112:1:1"
                }
              ]
            },
            "id": 95,
            "name": "onChristmas",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:2:1"
            },
            "src": "982:138:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1162:493:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1180:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "302e303031",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1193:11:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "0.001"
                        },
                        "src": "1180:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b657420707269636520697320302e3031",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1206:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03ec258ac46622a30d76bac4871830a1d578f00b5e7d12a5b38db2064eb8df6d",
                          "typeString": "literal_string \"ticket price is 0.01\""
                        },
                        "value": "ticket price is 0.01"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03ec258ac46622a30d76bac4871830a1d578f00b5e7d12a5b38db2064eb8df6d",
                          "typeString": "literal_string \"ticket price is 0.01\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 107,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1260:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 110,
                            "indexExpression": {
                              "expression": {
                                "id": 108,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1265:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1265:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1260:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1260:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1287:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1260:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f6e65207469636b6574207065722061646472657373",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1306:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cc022d825a9d505f8e1fce084d5aeac738daf37902a7e4018c3d7a4d88aaa05",
                          "typeString": "literal_string \"only one ticket per address\""
                        },
                        "value": "only one ticket per address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cc022d825a9d505f8e1fce084d5aeac738daf37902a7e4018c3d7a4d88aaa05",
                          "typeString": "literal_string \"only one ticket per address\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1239:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:106:1"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 117,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1356:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "expression": {
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1361:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1361:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1356:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hasTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1356:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1385:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1356:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:33:1"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 125,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1399:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1404:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1404:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1399:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "1399:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1425:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1399:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:30:1"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 133,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1558:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1563:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1563:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1558:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "orderNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1558:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138,
                      "name": "orderNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1586:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1558:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:36:1"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1604:10:1",
                    "subExpression": {
                      "id": 141,
                      "name": "orderNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1604:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:10:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1637:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1637:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "playas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1625:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1625:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:23:1"
                }
              ]
            },
            "functionSelector": "edca914c",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTicket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:1"
            },
            "scope": 433,
            "src": "1126:529:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1719:205:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1784:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1784:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 166,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1804:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WhiteElephant_$433",
                              "typeString": "contract WhiteElephant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WhiteElephant_$433",
                              "typeString": "contract WhiteElephant"
                            }
                          ],
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1796:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1796:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 168,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "1811:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 159,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1766:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1823",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1324,
                      "src": "1766:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 175,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "1901:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1823",
                              "typeString": "contract ERC721"
                            }
                          },
                          {
                            "id": 176,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "1907:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721_$1823",
                              "typeString": "contract ERC721"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 174,
                          "name": "Nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1897:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Nft_$56_storage_ptr_$",
                            "typeString": "type(struct WhiteElephant.Nft storage pointer)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1897:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_memory_ptr",
                          "typeString": "struct WhiteElephant.Nft memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Nft_$56_memory_ptr",
                          "typeString": "struct WhiteElephant.Nft memory"
                        }
                      ],
                      "expression": {
                        "id": 171,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1887:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1887:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Nft_$56_storage_$returns$__$",
                        "typeString": "function (struct WhiteElephant.Nft storage ref)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:30:1"
                }
              ]
            },
            "functionSelector": "a72e2cd6",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1681:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1823",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "ERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1823,
                    "src": "1681:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1823",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1694:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1680:31:1"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:1"
            },
            "scope": 433,
            "src": "1661:263:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2060:628:1",
              "statements": [
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "2207:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "2207:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "baseExpression": {
                      "id": 196,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2229:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 199,
                    "indexExpression": {
                      "expression": {
                        "id": 197,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2234:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2234:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2229:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2207:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 202,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2264:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderNum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "2264:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 204,
                          "name": "_stealFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "2282:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2264:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e7420737465616c2066726f6d207468656d",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2294:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_332c9366e919bd8521c33e53059285bf63e9dbb12bbcd1a6d9c71be9c92f2b79",
                          "typeString": "literal_string \"cant steal from them\""
                        },
                        "value": "cant steal from them"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_332c9366e919bd8521c33e53059285bf63e9dbb12bbcd1a6d9c71be9c92f2b79",
                          "typeString": "literal_string \"cant steal from them\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 210,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "2348:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 212,
                            "indexExpression": {
                              "id": 211,
                              "name": "_theirAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "2353:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2348:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wasStolenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "2348:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2385:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2348:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e7420737465616c2066726f6d207468656d20616761696e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2404:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f25a14c45951902db7d6c86aa03f97da0bee9ae9c27da59e86da580a34a253f",
                          "typeString": "literal_string \"cant steal from them again\""
                        },
                        "value": "cant steal from them again"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f25a14c45951902db7d6c86aa03f97da0bee9ae9c27da59e86da580a34a253f",
                          "typeString": "literal_string \"cant steal from them again\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2327:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:115:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:115:1"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2453:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2453:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 222,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2466:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 224,
                        "indexExpression": {
                          "id": 223,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2471:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2466:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2466:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2453:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:36:1"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2499:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2499:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 231,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2516:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "id": 232,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2521:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2516:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2516:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2499:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:44:1"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 237,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2554:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "id": 238,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2559:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2554:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wasStolenFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "2554:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2590:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2554:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:40:1"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 244,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2604:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "id": 245,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2609:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2604:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2604:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2638:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2630:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2630:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2604:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:36:1"
                },
                {
                  "expression": {
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 254,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2650:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "id": 255,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2655:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2650:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2650:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2680:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2650:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:31:1"
                }
              ]
            },
            "functionSelector": "4255f4ea",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 188,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2024:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2024:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 190,
                "modifierName": {
                  "id": 187,
                  "name": "yourOrder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "2014:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2014:21:1"
              },
              {
                "id": 192,
                "modifierName": {
                  "id": 191,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "2044:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:11:1"
              }
            ],
            "name": "stealNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_stealFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1948:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_theirAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1968:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:43:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:1"
            },
            "scope": 433,
            "src": "1930:758:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "2797:418:1",
              "statements": [
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "2807:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "2807:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "baseExpression": {
                      "id": 273,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2829:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 276,
                    "indexExpression": {
                      "expression": {
                        "id": 274,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2834:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2834:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2829:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:38:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 278,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "2998:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2998:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 283,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3019:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                                "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "currNftToUnwrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3024:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3019:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Nft_$56_storage",
                              "typeString": "struct WhiteElephant.Nft storage ref"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nft",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "3019:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        ],
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3011:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3011:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3011:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2998:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:47:1"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 290,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3055:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3055:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 293,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3072:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                            "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "id": 294,
                          "name": "currNftToUnwrap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3077:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3072:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "3072:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3055:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:46:1"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3111:17:1",
                    "subExpression": {
                      "id": 299,
                      "name": "currNftToUnwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3111:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:17:1"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3190:18:1",
                    "subExpression": {
                      "id": 302,
                      "name": "currentUnwrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3190:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:18:1"
                }
              ]
            },
            "functionSelector": "fd02ffb7",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 265,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2773:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2773:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 267,
                "modifierName": {
                  "id": 264,
                  "name": "yourOrder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "2763:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2763:21:1"
              },
              {
                "id": 269,
                "modifierName": {
                  "id": 268,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "2785:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:11:1"
              }
            ],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:2:1"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:1"
            },
            "scope": 433,
            "src": "2738:477:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "3473:702:1",
              "statements": [
                {
                  "assignments": [
                    312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "3483:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "3483:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 313,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "3505:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 316,
                    "indexExpression": {
                      "expression": {
                        "id": 314,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3510:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3510:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3505:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3483:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "player",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "3539:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                            "typeString": "struct WhiteElephant.Info storage pointer"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50,
                        "src": "3539:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e7420706c6179",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3554:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10b58d06bdb8be4e720b770c76e04fc94b074a63efce8ff06a60973144a02251",
                          "typeString": "literal_string \"you cant play\""
                        },
                        "value": "you cant play"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10b58d06bdb8be4e720b770c76e04fc94b074a63efce8ff06a60973144a02251",
                          "typeString": "literal_string \"you cant play\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3531:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 325,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3637:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasTicket",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "3637:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3657:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3637:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206d75737420686176652061207469636b6574",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3663:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d21c8c7346a6f8b4132da91b425429426d3bfa6547a6ed3afc4bb616083eaa2d",
                          "typeString": "literal_string \"you must have a ticket\""
                        },
                        "value": "you must have a ticket"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d21c8c7346a6f8b4132da91b425429426d3bfa6547a6ed3afc4bb616083eaa2d",
                          "typeString": "literal_string \"you must have a ticket\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3629:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 333,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3706:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wasStolenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "3706:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3730:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3706:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206d7573742068617665206265656e2073746f6c656e2066726f6d",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3736:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a95a0aea3794a04739c6162a2975227f9fee0cb68e5c308508a83fb747127b7",
                          "typeString": "literal_string \"you must have been stolen from\""
                        },
                        "value": "you must have been stolen from"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a95a0aea3794a04739c6162a2975227f9fee0cb68e5c308508a83fb747127b7",
                          "typeString": "literal_string \"you must have been stolen from\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3698:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3698:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 343,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "3808:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                  "typeString": "struct WhiteElephant.Info storage pointer"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nft",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "3808:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3800:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 341,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3800:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3831:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3823:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3823:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3823:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3800:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206861766520616c726561647920756e7772617070656420616674657220737465616c",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3847:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e3af9c481657d2a0d566ba1d63b277f66a9a7f52c76576ec72b993bd1fbaa08",
                          "typeString": "literal_string \"you have already unwrapped after steal\""
                        },
                        "value": "you have already unwrapped after steal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e3af9c481657d2a0d566ba1d63b277f66a9a7f52c76576ec72b993bd1fbaa08",
                          "typeString": "literal_string \"you have already unwrapped after steal\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3779:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 355,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3915:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "3915:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3933:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3915:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7765697264206572726f72",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3936:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a411c2c38c826f5a5c0e2cea9343a478b084a5e9a3bb3ca56d6a70f45808aaf",
                          "typeString": "literal_string \"weird error\""
                        },
                        "value": "weird error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a411c2c38c826f5a5c0e2cea9343a478b084a5e9a3bb3ca56d6a70f45808aaf",
                          "typeString": "literal_string \"weird error\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3907:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3907:43:1"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 362,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4020:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "4020:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 367,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "4041:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                                "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "currNftToUnwrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "4046:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4041:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Nft_$56_storage",
                              "typeString": "struct WhiteElephant.Nft storage ref"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nft",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "4041:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        ],
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4033:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4033:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4033:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4020:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:47:1"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 374,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4077:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "4077:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 377,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "4094:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                            "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                          }
                        },
                        "id": 379,
                        "indexExpression": {
                          "id": 378,
                          "name": "currNftToUnwrap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "4099:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4094:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "4094:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4077:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4077:46:1"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4133:17:1",
                    "subExpression": {
                      "id": 383,
                      "name": "currNftToUnwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "4133:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:17:1"
                }
              ]
            },
            "functionSelector": "ef2a209a",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 309,
                "modifierName": {
                  "id": 308,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "3461:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3461:11:1"
              }
            ],
            "name": "unwrapAfterStolen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3451:2:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:0:1"
            },
            "scope": 433,
            "src": "3425:750:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "4230:306:1",
              "statements": [
                {
                  "body": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "4319:211:1",
                    "statements": [
                      {
                        "assignments": [
                          406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 406,
                            "mutability": "mutable",
                            "name": "player",
                            "nodeType": "VariableDeclaration",
                            "scope": 429,
                            "src": "4333:19:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info"
                            },
                            "typeName": {
                              "id": 405,
                              "name": "Info",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 51,
                              "src": "4333:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                "typeString": "struct WhiteElephant.Info"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 412,
                        "initialValue": {
                          "baseExpression": {
                            "id": 407,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4355:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                              "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                            }
                          },
                          "id": 411,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 408,
                              "name": "playas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4360:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 410,
                            "indexExpression": {
                              "id": 409,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "4367:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4360:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4355:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Info_$51_storage",
                            "typeString": "struct WhiteElephant.Info storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4333:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 420,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4441:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WhiteElephant_$433",
                                    "typeString": "contract WhiteElephant"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WhiteElephant_$433",
                                    "typeString": "contract WhiteElephant"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4433:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4433:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4433:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 422,
                                "name": "playas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "4464:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 424,
                              "indexExpression": {
                                "id": 423,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "4471:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4464:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 425,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 406,
                                "src": "4491:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                  "typeString": "struct WhiteElephant.Info storage pointer"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "4491:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 414,
                                    "name": "player",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 406,
                                    "src": "4391:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                      "typeString": "struct WhiteElephant.Info storage pointer"
                                    }
                                  },
                                  "id": 415,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nft",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "4391:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 413,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1823,
                                "src": "4384:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1823_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4384:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1823",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1324,
                            "src": "4384:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4384:135:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "4384:135:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 398,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4295:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 399,
                        "name": "playas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "4299:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4299:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4295:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "initializationExpression": {
                    "assignments": [
                      395
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "4280:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4280:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 397,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4292:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4280:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4314:3:1",
                      "subExpression": {
                        "id": 402,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "4314:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 404,
                    "nodeType": "ExpressionStatement",
                    "src": "4314:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4275:255:1"
                }
              ]
            },
            "functionSelector": "86ec6177",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 390,
                "modifierName": {
                  "id": 389,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "4208:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4208:9:1"
              },
              {
                "id": 392,
                "modifierName": {
                  "id": 391,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "4218:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4218:11:1"
              }
            ],
            "name": "endEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4198:2:1"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4230:0:1"
            },
            "scope": 433,
            "src": "4181:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 434,
        "src": "201:4337:1"
      }
    ],
    "src": "32:4507:1"
  },
  "legacyAST": {
    "absolutePath": "/home/shredder/git/renft/white-elephant/contracts/WhiteElephant.sol",
    "exportedSymbols": {
      "Address": [
        2259
      ],
      "Context": [
        518
      ],
      "ERC165": [
        684
      ],
      "ERC721": [
        1823
      ],
      "EnumerableMap": [
        2714
      ],
      "EnumerableSet": [
        3194
      ],
      "IERC165": [
        696
      ],
      "IERC721": [
        1939
      ],
      "IERC721Enumerable": [
        1970
      ],
      "IERC721Metadata": [
        1997
      ],
      "IERC721Receiver": [
        2015
      ],
      "Ownable": [
        627
      ],
      "SafeMath": [
        892
      ],
      "Strings": [
        3281
      ],
      "WhiteElephant": [
        433
      ]
    },
    "id": 434,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 1824,
        "src": "57:73:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/shredder/git/renft/white-elephant/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 434,
        "sourceUnit": 628,
        "src": "131:68:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 627,
              "src": "227:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$627",
                "typeString": "contract Ownable"
              }
            },
            "id": 38,
            "nodeType": "InheritanceSpecifier",
            "src": "227:7:1"
          }
        ],
        "contractDependencies": [
          518,
          627
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 433,
        "linearizedBaseContracts": [
          433,
          627,
          518
        ],
        "name": "WhiteElephant",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WhiteElephant.Info",
            "id": 51,
            "members": [
              {
                "constant": false,
                "id": 40,
                "mutability": "mutable",
                "name": "nft",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "263:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 39,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "263:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 42,
                "mutability": "mutable",
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "284:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 41,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "284:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 44,
                "mutability": "mutable",
                "name": "orderNum",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "309:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 43,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 46,
                "mutability": "mutable",
                "name": "hasTicket",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "333:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 45,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "333:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "mutability": "mutable",
                "name": "wasStolenFrom",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "357:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 47,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "357:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50,
                "mutability": "mutable",
                "name": "exists",
                "nodeType": "VariableDeclaration",
                "scope": 51,
                "src": "385:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 49,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nodeType": "StructDefinition",
            "scope": 433,
            "src": "241:162:1",
            "visibility": "public"
          },
          {
            "canonicalName": "WhiteElephant.Nft",
            "id": 56,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "nft",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "430:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC721_$1823",
                  "typeString": "contract ERC721"
                },
                "typeName": {
                  "id": 52,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1823,
                  "src": "430:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1823",
                    "typeString": "contract ERC721"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 56,
                "src": "450:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "450:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Nft",
            "nodeType": "StructDefinition",
            "scope": 433,
            "src": "409:63:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 60,
            "mutability": "mutable",
            "name": "info",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "478:37:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
              "typeString": "mapping(address => struct WhiteElephant.Info)"
            },
            "typeName": {
              "id": 59,
              "keyType": {
                "id": 57,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "478:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                "typeString": "mapping(address => struct WhiteElephant.Info)"
              },
              "valueType": {
                "id": 58,
                "name": "Info",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 51,
                "src": "497:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                  "typeString": "struct WhiteElephant.Info"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "9d78c834",
            "id": 62,
            "mutability": "mutable",
            "name": "orderNum",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "558:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 61,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "558:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "600d003b",
            "id": 65,
            "mutability": "mutable",
            "name": "playas",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "641:23:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "641:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 64,
              "nodeType": "ArrayTypeName",
              "src": "641:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "28ad0ccb",
            "id": 67,
            "mutability": "mutable",
            "name": "currentUnwrapper",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "671:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 66,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "671:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "265aa621",
            "id": 70,
            "mutability": "mutable",
            "name": "nfts",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "707:17:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
              "typeString": "struct WhiteElephant.Nft[]"
            },
            "typeName": {
              "baseType": {
                "id": 68,
                "name": "Nft",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 56,
                "src": "707:3:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Nft_$56_storage_ptr",
                  "typeString": "struct WhiteElephant.Nft"
                }
              },
              "id": 69,
              "nodeType": "ArrayTypeName",
              "src": "707:5:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage_ptr",
                "typeString": "struct WhiteElephant.Nft[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 73,
            "mutability": "mutable",
            "name": "unavailableNfts",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "766:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "766:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 72,
              "nodeType": "ArrayTypeName",
              "src": "766:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "f0178c83",
            "id": 75,
            "mutability": "mutable",
            "name": "currNftToUnwrap",
            "nodeType": "VariableDeclaration",
            "scope": 433,
            "src": "806:30:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 74,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 90,
              "nodeType": "Block",
              "src": "879:97:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 80,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "897:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 82,
                            "indexExpression": {
                              "id": 81,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 77,
                              "src": "902:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "897:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderNum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "897:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 84,
                          "name": "currentUnwrapper",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "923:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "897:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f7420796f7572206f72646572",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8452e0e0abbb62beb69d724a519fd9465797ff825106b0f43c9b945197961412",
                          "typeString": "literal_string \"not your order\""
                        },
                        "value": "not your order"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8452e0e0abbb62beb69d724a519fd9465797ff825106b0f43c9b945197961412",
                          "typeString": "literal_string \"not your order\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "889:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "889:69:1"
                },
                {
                  "id": 89,
                  "nodeType": "PlaceholderStatement",
                  "src": "968:1:1"
                }
              ]
            },
            "id": 91,
            "name": "yourOrder",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 91,
                  "src": "862:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:17:1"
            },
            "src": "843:133:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1005:115:1",
              "statements": [
                {
                  "id": 93,
                  "nodeType": "PlaceholderStatement",
                  "src": "1112:1:1"
                }
              ]
            },
            "id": 95,
            "name": "onChristmas",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1002:2:1"
            },
            "src": "982:138:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1162:493:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1180:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "302e303031",
                          "id": 101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1193:11:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "0.001"
                        },
                        "src": "1180:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7469636b657420707269636520697320302e3031",
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1206:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03ec258ac46622a30d76bac4871830a1d578f00b5e7d12a5b38db2064eb8df6d",
                          "typeString": "literal_string \"ticket price is 0.01\""
                        },
                        "value": "ticket price is 0.01"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03ec258ac46622a30d76bac4871830a1d578f00b5e7d12a5b38db2064eb8df6d",
                          "typeString": "literal_string \"ticket price is 0.01\""
                        }
                      ],
                      "id": 98,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 107,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "1260:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 110,
                            "indexExpression": {
                              "expression": {
                                "id": 108,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1265:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1265:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1260:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "exists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1260:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1287:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1260:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206f6e65207469636b6574207065722061646472657373",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1306:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9cc022d825a9d505f8e1fce084d5aeac738daf37902a7e4018c3d7a4d88aaa05",
                          "typeString": "literal_string \"only one ticket per address\""
                        },
                        "value": "only one ticket per address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9cc022d825a9d505f8e1fce084d5aeac738daf37902a7e4018c3d7a4d88aaa05",
                          "typeString": "literal_string \"only one ticket per address\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1239:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:106:1"
                },
                {
                  "expression": {
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 117,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1356:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 120,
                        "indexExpression": {
                          "expression": {
                            "id": 118,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1361:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1361:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1356:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "hasTicket",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46,
                      "src": "1356:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1385:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1356:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:33:1"
                },
                {
                  "expression": {
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 125,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1399:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 128,
                        "indexExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1404:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1404:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1399:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "exists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "1399:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1425:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1399:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1399:30:1"
                },
                {
                  "expression": {
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 133,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "1558:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 136,
                        "indexExpression": {
                          "expression": {
                            "id": 134,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1563:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1563:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1558:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "orderNum",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "1558:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 138,
                      "name": "orderNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1586:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "1558:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 140,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:36:1"
                },
                {
                  "expression": {
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1604:10:1",
                    "subExpression": {
                      "id": 141,
                      "name": "orderNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1604:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:10:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1637:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1637:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "playas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "1625:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1625:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:23:1"
                }
              ]
            },
            "functionSelector": "edca914c",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyTicket",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1144:2:1"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:1"
            },
            "scope": 433,
            "src": "1126:529:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 180,
              "nodeType": "Block",
              "src": "1719:205:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 162,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1784:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1784:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 166,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1804:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WhiteElephant_$433",
                              "typeString": "contract WhiteElephant"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WhiteElephant_$433",
                              "typeString": "contract WhiteElephant"
                            }
                          ],
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1796:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 164,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1796:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1796:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 168,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 156,
                        "src": "1811:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 159,
                        "name": "_nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1766:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1823",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1324,
                      "src": "1766:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1766:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:54:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 175,
                            "name": "_nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 154,
                            "src": "1901:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC721_$1823",
                              "typeString": "contract ERC721"
                            }
                          },
                          {
                            "id": 176,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "1907:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC721_$1823",
                              "typeString": "contract ERC721"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 174,
                          "name": "Nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1897:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Nft_$56_storage_ptr_$",
                            "typeString": "type(struct WhiteElephant.Nft storage pointer)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1897:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_memory_ptr",
                          "typeString": "struct WhiteElephant.Nft memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Nft_$56_memory_ptr",
                          "typeString": "struct WhiteElephant.Nft memory"
                        }
                      ],
                      "expression": {
                        "id": 171,
                        "name": "nfts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "1887:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1887:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Nft_$56_storage_$returns$__$",
                        "typeString": "function (struct WhiteElephant.Nft storage ref)"
                      }
                    },
                    "id": 178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1887:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 179,
                  "nodeType": "ExpressionStatement",
                  "src": "1887:30:1"
                }
              ]
            },
            "functionSelector": "a72e2cd6",
            "id": 181,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1681:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$1823",
                    "typeString": "contract ERC721"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "ERC721",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1823,
                    "src": "1681:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721_$1823",
                      "typeString": "contract ERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "1694:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1694:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1680:31:1"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1719:0:1"
            },
            "scope": 433,
            "src": "1661:263:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "2060:628:1",
              "statements": [
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "2207:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "2207:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 200,
                  "initialValue": {
                    "baseExpression": {
                      "id": 196,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2229:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 199,
                    "indexExpression": {
                      "expression": {
                        "id": 197,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2234:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2234:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2229:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2207:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 202,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2264:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "orderNum",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "2264:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 204,
                          "name": "_stealFrom",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 183,
                          "src": "2282:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2264:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e7420737465616c2066726f6d207468656d",
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2294:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_332c9366e919bd8521c33e53059285bf63e9dbb12bbcd1a6d9c71be9c92f2b79",
                          "typeString": "literal_string \"cant steal from them\""
                        },
                        "value": "cant steal from them"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_332c9366e919bd8521c33e53059285bf63e9dbb12bbcd1a6d9c71be9c92f2b79",
                          "typeString": "literal_string \"cant steal from them\""
                        }
                      ],
                      "id": 201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2256:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2256:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "2256:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 210,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60,
                              "src": "2348:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                                "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                              }
                            },
                            "id": 212,
                            "indexExpression": {
                              "id": 211,
                              "name": "_theirAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 185,
                              "src": "2353:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2348:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage",
                              "typeString": "struct WhiteElephant.Info storage ref"
                            }
                          },
                          "id": 213,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wasStolenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "2348:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2385:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2348:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616e7420737465616c2066726f6d207468656d20616761696e",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2404:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f25a14c45951902db7d6c86aa03f97da0bee9ae9c27da59e86da580a34a253f",
                          "typeString": "literal_string \"cant steal from them again\""
                        },
                        "value": "cant steal from them again"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f25a14c45951902db7d6c86aa03f97da0bee9ae9c27da59e86da580a34a253f",
                          "typeString": "literal_string \"cant steal from them again\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2327:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2327:115:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2327:115:1"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 219,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2453:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2453:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 222,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2466:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 224,
                        "indexExpression": {
                          "id": 223,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2471:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2466:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 225,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2466:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2453:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:36:1"
                },
                {
                  "expression": {
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 228,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2499:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2499:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 231,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2516:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 233,
                        "indexExpression": {
                          "id": 232,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2521:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2516:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2516:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2499:44:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:44:1"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 237,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2554:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "id": 238,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2559:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2554:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "wasStolenFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 48,
                      "src": "2554:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2590:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2554:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:40:1"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 244,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2604:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 246,
                        "indexExpression": {
                          "id": 245,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2609:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2604:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2604:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2638:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2630:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2630:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2604:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:36:1"
                },
                {
                  "expression": {
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 254,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "2650:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                            "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                          }
                        },
                        "id": 256,
                        "indexExpression": {
                          "id": 255,
                          "name": "_theirAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "2655:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2650:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage",
                          "typeString": "struct WhiteElephant.Info storage ref"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "2650:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2680:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2650:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 260,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:31:1"
                }
              ]
            },
            "functionSelector": "4255f4ea",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 188,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2024:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2024:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 190,
                "modifierName": {
                  "id": 187,
                  "name": "yourOrder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "2014:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2014:21:1"
              },
              {
                "id": 192,
                "modifierName": {
                  "id": 191,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "2044:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:11:1"
              }
            ],
            "name": "stealNft",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "_stealFrom",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1948:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "mutability": "mutable",
                  "name": "_theirAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1968:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:43:1"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:1"
            },
            "scope": 433,
            "src": "1930:758:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "2797:418:1",
              "statements": [
                {
                  "assignments": [
                    272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 272,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 305,
                      "src": "2807:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 271,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "2807:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 277,
                  "initialValue": {
                    "baseExpression": {
                      "id": 273,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "2829:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 276,
                    "indexExpression": {
                      "expression": {
                        "id": 274,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2834:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2834:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2829:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2807:38:1"
                },
                {
                  "expression": {
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 278,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "2998:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "2998:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 283,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "3019:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                                "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                              }
                            },
                            "id": 285,
                            "indexExpression": {
                              "id": 284,
                              "name": "currNftToUnwrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "3024:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3019:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Nft_$56_storage",
                              "typeString": "struct WhiteElephant.Nft storage ref"
                            }
                          },
                          "id": 286,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nft",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "3019:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        ],
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3011:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3011:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3011:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2998:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:47:1"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 290,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 272,
                        "src": "3055:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "3055:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 293,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "3072:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                            "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                          }
                        },
                        "id": 295,
                        "indexExpression": {
                          "id": 294,
                          "name": "currNftToUnwrap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "3077:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3072:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "3072:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3055:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:46:1"
                },
                {
                  "expression": {
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3111:17:1",
                    "subExpression": {
                      "id": 299,
                      "name": "currNftToUnwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "3111:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 301,
                  "nodeType": "ExpressionStatement",
                  "src": "3111:17:1"
                },
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3190:18:1",
                    "subExpression": {
                      "id": 302,
                      "name": "currentUnwrapper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "3190:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:18:1"
                }
              ]
            },
            "functionSelector": "fd02ffb7",
            "id": 306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 265,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2773:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2773:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 267,
                "modifierName": {
                  "id": 264,
                  "name": "yourOrder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 91,
                  "src": "2763:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2763:21:1"
              },
              {
                "id": 269,
                "modifierName": {
                  "id": 268,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "2785:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:11:1"
              }
            ],
            "name": "unwrap",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2753:2:1"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2797:0:1"
            },
            "scope": 433,
            "src": "2738:477:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "3473:702:1",
              "statements": [
                {
                  "assignments": [
                    312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 312,
                      "mutability": "mutable",
                      "name": "player",
                      "nodeType": "VariableDeclaration",
                      "scope": 386,
                      "src": "3483:19:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                        "typeString": "struct WhiteElephant.Info"
                      },
                      "typeName": {
                        "id": 311,
                        "name": "Info",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 51,
                        "src": "3483:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 317,
                  "initialValue": {
                    "baseExpression": {
                      "id": 313,
                      "name": "info",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "3505:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                        "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                      }
                    },
                    "id": 316,
                    "indexExpression": {
                      "expression": {
                        "id": 314,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3510:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3510:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3505:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$51_storage",
                      "typeString": "struct WhiteElephant.Info storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3483:38:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 319,
                          "name": "player",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "3539:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                            "typeString": "struct WhiteElephant.Info storage pointer"
                          }
                        },
                        "id": 320,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exists",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50,
                        "src": "3539:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752063616e7420706c6179",
                        "id": 321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3554:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_10b58d06bdb8be4e720b770c76e04fc94b074a63efce8ff06a60973144a02251",
                          "typeString": "literal_string \"you cant play\""
                        },
                        "value": "you cant play"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_10b58d06bdb8be4e720b770c76e04fc94b074a63efce8ff06a60973144a02251",
                          "typeString": "literal_string \"you cant play\""
                        }
                      ],
                      "id": 318,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3531:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3531:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 323,
                  "nodeType": "ExpressionStatement",
                  "src": "3531:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 325,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3637:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasTicket",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 46,
                          "src": "3637:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3657:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3637:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206d75737420686176652061207469636b6574",
                        "id": 329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3663:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d21c8c7346a6f8b4132da91b425429426d3bfa6547a6ed3afc4bb616083eaa2d",
                          "typeString": "literal_string \"you must have a ticket\""
                        },
                        "value": "you must have a ticket"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d21c8c7346a6f8b4132da91b425429426d3bfa6547a6ed3afc4bb616083eaa2d",
                          "typeString": "literal_string \"you must have a ticket\""
                        }
                      ],
                      "id": 324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3629:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3629:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "3629:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 333,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3706:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wasStolenFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 48,
                          "src": "3706:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3730:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3706:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206d7573742068617665206265656e2073746f6c656e2066726f6d",
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3736:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a95a0aea3794a04739c6162a2975227f9fee0cb68e5c308508a83fb747127b7",
                          "typeString": "literal_string \"you must have been stolen from\""
                        },
                        "value": "you must have been stolen from"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a95a0aea3794a04739c6162a2975227f9fee0cb68e5c308508a83fb747127b7",
                          "typeString": "literal_string \"you must have been stolen from\""
                        }
                      ],
                      "id": 332,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3698:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3698:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3698:71:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 343,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 312,
                                "src": "3808:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                  "typeString": "struct WhiteElephant.Info storage pointer"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "nft",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40,
                              "src": "3808:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3800:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 341,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3800:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3800:19:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3831:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3823:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 346,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3823:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3823:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3800:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f75206861766520616c726561647920756e7772617070656420616674657220737465616c",
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3847:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e3af9c481657d2a0d566ba1d63b277f66a9a7f52c76576ec72b993bd1fbaa08",
                          "typeString": "literal_string \"you have already unwrapped after steal\""
                        },
                        "value": "you have already unwrapped after steal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e3af9c481657d2a0d566ba1d63b277f66a9a7f52c76576ec72b993bd1fbaa08",
                          "typeString": "literal_string \"you have already unwrapped after steal\""
                        }
                      ],
                      "id": 340,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3779:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3779:118:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "3779:118:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 355,
                            "name": "player",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3915:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info storage pointer"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "3915:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3933:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3915:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7765697264206572726f72",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3936:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a411c2c38c826f5a5c0e2cea9343a478b084a5e9a3bb3ca56d6a70f45808aaf",
                          "typeString": "literal_string \"weird error\""
                        },
                        "value": "weird error"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a411c2c38c826f5a5c0e2cea9343a478b084a5e9a3bb3ca56d6a70f45808aaf",
                          "typeString": "literal_string \"weird error\""
                        }
                      ],
                      "id": 354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3907:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3907:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3907:43:1"
                },
                {
                  "expression": {
                    "id": 372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 362,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4020:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 364,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "nft",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40,
                      "src": "4020:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 367,
                              "name": "nfts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70,
                              "src": "4041:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                                "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "currNftToUnwrap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 75,
                              "src": "4046:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4041:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Nft_$56_storage",
                              "typeString": "struct WhiteElephant.Nft storage ref"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "nft",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 53,
                          "src": "4041:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC721_$1823",
                            "typeString": "contract ERC721"
                          }
                        ],
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4033:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4033:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4033:34:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4020:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 373,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:47:1"
                },
                {
                  "expression": {
                    "id": 381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 374,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4077:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                          "typeString": "struct WhiteElephant.Info storage pointer"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "4077:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 377,
                          "name": "nfts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "4094:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Nft_$56_storage_$dyn_storage",
                            "typeString": "struct WhiteElephant.Nft storage ref[] storage ref"
                          }
                        },
                        "id": 379,
                        "indexExpression": {
                          "id": 378,
                          "name": "currNftToUnwrap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "4099:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4094:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Nft_$56_storage",
                          "typeString": "struct WhiteElephant.Nft storage ref"
                        }
                      },
                      "id": 380,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "4094:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4077:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 382,
                  "nodeType": "ExpressionStatement",
                  "src": "4077:46:1"
                },
                {
                  "expression": {
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4133:17:1",
                    "subExpression": {
                      "id": 383,
                      "name": "currNftToUnwrap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "4133:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 385,
                  "nodeType": "ExpressionStatement",
                  "src": "4133:17:1"
                }
              ]
            },
            "functionSelector": "ef2a209a",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 309,
                "modifierName": {
                  "id": 308,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "3461:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3461:11:1"
              }
            ],
            "name": "unwrapAfterStolen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 307,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3451:2:1"
            },
            "returnParameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3473:0:1"
            },
            "scope": 433,
            "src": "3425:750:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "4230:306:1",
              "statements": [
                {
                  "body": {
                    "id": 429,
                    "nodeType": "Block",
                    "src": "4319:211:1",
                    "statements": [
                      {
                        "assignments": [
                          406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 406,
                            "mutability": "mutable",
                            "name": "player",
                            "nodeType": "VariableDeclaration",
                            "scope": 429,
                            "src": "4333:19:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                              "typeString": "struct WhiteElephant.Info"
                            },
                            "typeName": {
                              "id": 405,
                              "name": "Info",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 51,
                              "src": "4333:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                "typeString": "struct WhiteElephant.Info"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 412,
                        "initialValue": {
                          "baseExpression": {
                            "id": 407,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "4355:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Info_$51_storage_$",
                              "typeString": "mapping(address => struct WhiteElephant.Info storage ref)"
                            }
                          },
                          "id": 411,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 408,
                              "name": "playas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "4360:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 410,
                            "indexExpression": {
                              "id": 409,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "4367:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4360:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4355:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Info_$51_storage",
                            "typeString": "struct WhiteElephant.Info storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4333:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 420,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4441:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_WhiteElephant_$433",
                                    "typeString": "contract WhiteElephant"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_WhiteElephant_$433",
                                    "typeString": "contract WhiteElephant"
                                  }
                                ],
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4433:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 418,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4433:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4433:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 422,
                                "name": "playas",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "4464:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 424,
                              "indexExpression": {
                                "id": 423,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 395,
                                "src": "4471:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4464:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 425,
                                "name": "player",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 406,
                                "src": "4491:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                  "typeString": "struct WhiteElephant.Info storage pointer"
                                }
                              },
                              "id": 426,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42,
                              "src": "4491:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 414,
                                    "name": "player",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 406,
                                    "src": "4391:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Info_$51_storage_ptr",
                                      "typeString": "struct WhiteElephant.Info storage pointer"
                                    }
                                  },
                                  "id": 415,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "nft",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40,
                                  "src": "4391:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 413,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1823,
                                "src": "4384:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1823_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4384:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1823",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1324,
                            "src": "4384:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4384:135:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 428,
                        "nodeType": "ExpressionStatement",
                        "src": "4384:135:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 398,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 395,
                      "src": "4295:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 399,
                        "name": "playas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "4299:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4299:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4295:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 430,
                  "initializationExpression": {
                    "assignments": [
                      395
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 395,
                        "mutability": "mutable",
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 430,
                        "src": "4280:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4280:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 397,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4292:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4280:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4314:3:1",
                      "subExpression": {
                        "id": 402,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "4314:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 404,
                    "nodeType": "ExpressionStatement",
                    "src": "4314:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4275:255:1"
                }
              ]
            },
            "functionSelector": "86ec6177",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 390,
                "modifierName": {
                  "id": 389,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 576,
                  "src": "4208:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4208:9:1"
              },
              {
                "id": 392,
                "modifierName": {
                  "id": 391,
                  "name": "onChristmas",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "4218:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4218:11:1"
              }
            ],
            "name": "endEvent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4198:2:1"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4230:0:1"
            },
            "scope": 433,
            "src": "4181:355:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 434,
        "src": "201:4337:1"
      }
    ],
    "src": "32:4507:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {
    "5": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xb1d18210AD30A55421466a2EeC1DbCaFc6293c5A",
      "transactionHash": "0xf2f3443287c7ee94e8bafa3f1cabb14c7acbb700742bb49195fe671d015d5681"
    }
  },
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-12-15T16:17:14.995Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}